/* ==========================================================================
  Media queries
========================================================================== */


@mixin breakpoint($size, $class : '.someclass') {

  @if $size == xxl {
    @media (min-width: 1400px) { @content; }
  }
  @if $size == xl {
    @media (min-width: 1200px) { @content; }
  }
  @else if $size == lg {
    @media (max-width: 1199.98px) { @content; }
  }
  @else if $size == md {
    @media (max-width: 991.98px)  { @content; }

  }

  @else if $size == sm {
    @media (max-width: 767.98px) { @content; }
  }

  @else if $size == xs {
    @media (max-width: 575.98px) { @content; }
  }

  @else if $size == xxs {
    @media (max-width: 420px) { @content; }
  }

  @else if $size == "iphone5"  {
    @media (max-width: 320px) and (orientation:portrait) { @content; }
  }

  @else if $size == "landscape"  {
    @media (orientation: landscape) { @content; }
  }

  @else if $size == "portrait"  {
    @media (orientation: portrait) { @content; }
  }


  @else {
    @media (max-width: $size)  { @content; }
  }
}

@mixin breakpointHeight($size){

   @media (max-height: $size) { @content; }

}

@mixin breakpointCustom($breakpoint){

   @media (#{$breakpoint}) { @content; }

}

/* ==========================================================================
  Px to rem
========================================================================== */

@mixin font-size($pxSize: 1) {
  font-size: $pxSize + px;
  font-size: ($pxSize / 16) + rem;
}

/* ==========================================================================
  Clearfix
========================================================================== */

@mixin clearfix {
  &:after,
  &:before {
    display: table;
    clear: both;
    content: "";
  }
}

/* ==========================================================================
  Long shadow
========================================================================== */

@mixin long-shadow($color, $length) {
  $shadow: '';

  @for $i from 0 to $length - 1 {
    $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' + $color + ',';
  }

  $shadow: $shadow + $length + 'px ' + $length + 'px 0 ' + rgba(0,0,0,0);

  $shadow: unquote($shadow);

  text-shadow: $shadow;
}

/* ==========================================================================
  transforms
========================================================================== */

//translate
@mixin translate($x:0, $y:0, $z:0) {

    -ms-transform: translate3d($x,$y,$z);
  -webkit-transform:translate3d($x,$y,$z);
  transform: translate3d($x,$y,$z);

}

// generic transform
@mixin transform($transforms...) {
     -moz-transform: $transforms;
       -o-transform: $transforms;
      -ms-transform: $transforms;
  -webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
   @include transform(scale($scale));
}

// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}

//transform origin
@mixin transform-origin ($origin...) {
    moz-transform-origin: $origin;
       -o-transform-origin: $origin;
      -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
          transform-origin: $origin;
}


/* ==========================================================================
  center position
========================================================================== */

@mixin center($pos : "absolute") {
  position:$pos;
  top:50%;
  left:50%;
  -ms-transform: translate3d(-50%,-50%,0);
  -webkit-transform:translate3d(-50%,-50%,0);
  transform: translate3d(-50%,-50%,0);
}


/* ==========================================================================
  background-image
========================================================================== */

@mixin background-image($size : "cover") {

  background-position:center center;
  background-repeat:no-repeat;
  background-size:$size;

}


/* ==========================================================================
  margin & padding
========================================================================== */

@mixin margin($marginBottom, $size : 'lg') {

  .margin-#{$size}-#{$marginBottom} {
    margin-bottom:#{$marginBottom}px;
  }

}

@mixin padding($top : 0, $right: 0, $bottom: 0, $left: 0) {

    padding-top: #{$top}px;
    padding-right: #{$right}px;
    padding-bottom: #{$bottom}px;
    padding-left: #{$left}px;

}

@mixin padding-class($top : 0, $bottom: 0) {

    .padding-#{$top}-#{$bottom} {
        @include padding($top, $bottom);
    }

}


/* ==========================================================================
  transition
========================================================================== */

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration...) {
    -moz-transition-duration:    $duration;
    -o-transition-duration:      $duration;
    -webkit-transition-duration: $duration;
    transition-duration:         $duration;
}
@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}

/* ==========================================================================
  Border radius
========================================================================== */
@mixin border-radius($radius...) {
  -webkit-border-top-left-radius: $radius;
-webkit-border-top-right-radius: $radius;
-webkit-border-bottom-right-radius: $radius;
-webkit-border-bottom-left-radius: $radius;
-moz-border-radius-topleft: $radius;
-moz-border-radius-topright: $radius;
-moz-border-radius-bottomright: $radius;
-moz-border-radius-bottomleft: $radius;
border-top-left-radius: $radius;
border-top-right-radius: $radius;
border-bottom-right-radius: $radius;
border-bottom-left-radius: $radius;
}



@mixin placeholder($color){
  &::-webkit-input-placeholder { /* Chrome/Opera/Safari */
      color: $color;
    }
  &::-moz-placeholder { /* Firefox 19+ */
      color: $color;
    }
  &:-ms-input-placeholder { /* IE 10+ */
      color: $color;
    }
  &:-moz-placeholder { /* Firefox 18- */
      color: $color;
    }
}


/* ==========================================================================
  Box Shadow
========================================================================== */
@mixin box-shadow($shadow...) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    box-shadow: $shadow;
} 


/* ==========================================================================
  Flexbox
========================================================================== */

@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex:  $values;
    -webkit-flex:  $values;
    -ms-flex:  $values;
    flex:  $values;
}

@mixin order($val) {
    -webkit-box-ordinal-group: $val;  
    -moz-box-ordinal-group: $val;     
    -ms-flex-order: $val;     
    -webkit-order: $val;  
    order: $val;
}




/* ==========================================================================
  Spacers
========================================================================== */

@mixin mt($breakpoint, $value) {
  @if $breakpoint == null {

    .mt-#{$value} {
       margin-top:#{$value}px;
    }

   } @else {
    .mt-#{$breakpoint}-#{$value} {
        margin-top:#{$value}px;
    }
  }
  
}


@mixin mb($breakpoint, $value) {
  @if $breakpoint == null {

    .mb-#{$value} {
       margin-bottom:#{$value}px;
    }

   } @else {
    .mb-#{$breakpoint}-#{$value} {
        margin-bottom:#{$value}px;
    }
  }
}

@mixin pt($breakpoint, $value) {
  @if $breakpoint == null {

    .pt-#{$value} {
       padding-top:#{$value}px;
    }

   } @else {
    .pt-#{$breakpoint}-#{$value} {
        padding-top:#{$value}px;
    }
  }
}


@mixin pb($breakpoint, $value) {
  @if $breakpoint == null {

    .pb-#{$value} {
       padding-bottom:#{$value}px;
    }

   } @else {
    .pb-#{$breakpoint}-#{$value} {
        padding-bottom:#{$value}px;
    }
  }
}